Magic Attributes and Variables in Python
========================================

https://docs.python.org/2/reference/datamodel.html

Function Attributes
-------------------
	__doc__   		The function’s documentation string, or None if 
	func_doc		unavailable. Writable.

	__name__   		The function’s name.
	func_name		Writable.

	__module__ 		The name of the module the function was defined in,
					in, or None if unavailable.	Writable.

	__defaults__  	A tuple containing default argument values for those 
    func_defaults	arguments that have defaults, or None if no arguments
    				 have a default value.	Writable.

	__code__ 		The code object representing the compiled function
	func_code		 body.	Writable.

	__globals__ 	A reference to the dictionary that holds the function’s 
	func_globals    global variables — the global namespace of the module
					in which the function was defined.	Read-only.
	
	__dict__ 		The namespace supporting arbitrary function attributes.
	func_dict		Writable.

	__closure__ 	None or a tuple of cells that contain bindings for 
	func_closure	the function’s free variables.	Read-only.

	__qualname__	The function’s qualified name. Writable.

	__annotations__	A dict containing annotations of parameters. 
					The keys of the dict are the parameter names, and 'return'
					for the return annotation, if provided.	Writable. 3.3

	__kwdefaults__	A dict containing defaults for keyword-only parameters.	
					Writable. 3.3 


Generator functions
-------------------
A function or method which uses the yield statement.
Such a function, when called, always returns an iterator object which can be
used to execute the body of the function: calling the iterator’s
iterator.__next__() method will cause the function to execute until it
provides a value using the yield statement. 
